name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  pull-requests: write
  issues: write
  contents: write
  repository-projects: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Install yq
        uses: mbround18/gh-reusable/actions/install-cli@v0.0.3
        with:
          repository: "mikefarah/yq"
          version: "latest"
          asset: "yq_linux_amd64"
          override-name: "yq"

      - name: Detect Chart Changes
        id: chart-changes
        run: |
          CHANGED_CHARTS=$(git diff --name-only HEAD~1 HEAD | grep 'charts/.*/Chart.yaml' | awk -F/ '{print $2}')
          echo "changed_charts=$CHANGED_CHARTS" >> $GITHUB_OUTPUT

      - name: Update Chart Version
        if: steps.chart-changes.outputs.changed_charts != ''
        run: |
          for chart in $CHANGED_CHARTS; do
            CHART_PATH="charts/$chart/Chart.yaml"
            LAST_COMMIT=$(git log -1 --pretty=%B -- $CHART_PATH)
            if [[ $LAST_COMMIT == *"patch"* ]]; then
              bump_type="patch"
            elif [[ $LAST_COMMIT == *"minor"* ]]; then
              bump_type="minor"
            elif [[ $LAST_COMMIT == *"major"* ]]; then
              bump_type="major"
            else
              bump_type="patch"
            fi
            current_version=$(yq eval '.version' $CHART_PATH)
            IFS='.' read -r -a parts <<< "$current_version"
            case $bump_type in
              patch)
                ((parts[2]++))
                ;;
              minor)
                ((parts[1]++))
                parts[2]=0
                ;;
              major)
                ((parts[0]++))
                parts[1]=0
                parts[2]=0
                ;;
            esac
            new_version="${parts[0]}.${parts[1]}.${parts[2]}"
            yq eval -i ".version = \"$new_version\"" $CHART_PATH
          done

          git add charts/*/Chart.yaml
          git commit -m "[skip ci] Robot commit: Bumping chart versions based on recent changes"
          git push origin ${{ github.ref }}

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1
        with:
          charts_dir: charts
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GH_TOKEN }}"
