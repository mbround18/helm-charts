{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "infisical.fullname" . }}-redis
  labels:
    {{- include "infisical.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redis
      {{- include "infisical.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redis
        {{- include "infisical.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: redis
          image: {{ .Values.redis.image }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              exec redis-server \
                --appendonly no \
                --save '' \
                --protected-mode yes \
                --lazyfree-lazy-eviction yes \
                --requirepass "$REDIS_PASSWORD"
          ports:
            - containerPort: 6379
              name: tcp-redis
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.passwordSecret }}
                  key: {{ .Values.redis.passwordKey }}
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "infisical.fullname" . }}-redis
spec:
  selector:
    app.kubernetes.io/component: redis
    {{- include "infisical.selectorLabels" . | nindent 4 }}
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
{{- end }}